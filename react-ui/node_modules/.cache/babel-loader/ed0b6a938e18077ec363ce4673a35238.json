{"ast":null,"code":"var _jsxFileName = \"/Users/obscurax/Documents/E\\u0301tudes/Applications Web/react-gambling-project/src/components/pages/Signup.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport io from \"socket.io-client\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { Card, Form, Button } from \"react-bootstrap\";\n\nfunction Signup(props) {\n  const referer = props.location.state != null ? props.location.state.referer : '/';\n  const socket = io();\n  const auth = useAuth();\n  const [isError, setIsError] = useState(false);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password_confirm, setPasswordConfirm] = useState(\"\"); //Fonction pour envoyer les infos pour l'inscription\n\n  function postSignup() {\n    //Vérification que les deux mots de passe correspondent\n    if (password === password_confirm) {\n      //Émission d'un message avec les infos\n      socket.emit(\"signup\", username, password); //Lors de la réception d'un message de succès d'authentification\n\n      socket.on(\"signup_info\", function (success) {\n        if (success) {\n          auth.setUsername(username);\n          auth.setPassword(password);\n          auth.setAuthenticated(true);\n        } else setIsError(true);\n      });\n    } else //Détection d'un problème\n      setIsError(true);\n\n    return false;\n  }\n\n  if (auth.authenticated) {\n    return React.createElement(Redirect, {\n      to: referer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"Identifiant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"Mot de passe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"password\",\n    onChange: e => {\n      setPasswordConfirm(e.target.value);\n    },\n    placeholder: \"Confirmation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: postSignup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Valider\")), React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Vous avez d\\xE9j\\xE0 un comte ?\"), isError && React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Erreur lors de l'inscription.\"));\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/obscurax/Documents/Études/Applications Web/react-gambling-project/src/components/pages/Signup.js"],"names":["React","useState","Redirect","Link","io","useAuth","Card","Form","Button","Signup","props","referer","location","state","socket","auth","isError","setIsError","username","setUserName","password","setPassword","password_confirm","setPasswordConfirm","postSignup","emit","on","success","setUsername","setAuthenticated","authenticated","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Redirect, Link } from 'react-router-dom';\nimport io from \"socket.io-client\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport {Card, Form, Button} from \"react-bootstrap\";\n\nfunction Signup(props) {\n    const referer = (props.location.state != null) ? props.location.state.referer : '/';\n    const socket = io();\n    const auth = useAuth();\n\n    const [isError, setIsError] = useState(false);\n    const [username, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [password_confirm, setPasswordConfirm] = useState(\"\");\n\n    //Fonction pour envoyer les infos pour l'inscription\n    function postSignup() {\n        //Vérification que les deux mots de passe correspondent\n        if (password === password_confirm) {\n            //Émission d'un message avec les infos\n            socket.emit(\"signup\", username, password);\n            //Lors de la réception d'un message de succès d'authentification\n            socket.on(\"signup_info\", function (success) {\n                if (success) {\n                    auth.setUsername(username);\n                    auth.setPassword(password);\n                    auth.setAuthenticated(true);\n                }\n                else setIsError(true);\n            });\n        }\n        else\n            //Détection d'un problème\n            setIsError(true);\n        return false;\n    }\n\n    if (auth.authenticated) {\n        return <Redirect to={referer} />;\n    }\n\n    return (\n        <Card>\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Control\n                        type=\"text\"\n                        onChange={e => {\n                            setUserName(e.target.value);\n                        }}\n                        placeholder=\"Identifiant\"\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Control\n                        type=\"password\"\n                        onChange={e => {\n                            setPassword(e.target.value);\n                        }}\n                        placeholder=\"Mot de passe\"\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Control\n                        type=\"password\"\n                        onChange={e => {\n                            setPasswordConfirm(e.target.value);\n                        }}\n                        placeholder=\"Confirmation\"\n                    />\n                </Form.Group>\n                <Button variant=\"primary\" onClick={postSignup}>Valider</Button>\n            </Form>\n            <Link to=\"/login\">Vous avez déjà un comte ?</Link>\n            { isError && <h3>Erreur lors de l'inscription.</h3> }\n        </Card>\n    );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}