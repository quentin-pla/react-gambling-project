{"ast":null,"code":"var _jsxFileName = \"/Users/obscurax/Documents/E\\u0301tudes/Applications Web/react-gambling-project/src/context/AuthContext.js\";\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nexport const AuthContext = createContext();\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport const AuthContextProvider = ({\n  children\n}) => {\n  const prevAuth = window.localStorage.getItem('authenticated') || false;\n  const prevUsername = window.localStorage.getItem('username') || null;\n  const prevPassword = window.localStorage.getItem('password') || null;\n  const [authenticated, setAuthenticated] = useState(prevAuth);\n  const [username, setUsername] = useState(prevUsername);\n  const [password, setPassword] = useState(prevPassword);\n  console.log(username, password, authenticated);\n  useEffect(() => {\n    window.localStorage.removeItem('authenticated');\n    window.localStorage.removeItem('username');\n    window.localStorage.removeItem('password');\n  }, [authenticated, username, password]);\n  useEffect(() => {\n    function handleAuthStatus(authenticated) {\n      setAuthenticated(status.isOnline);\n    }\n\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return function cleanup() {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n  const defaultContext = {\n    authenticated,\n    setAuthenticated,\n    username,\n    setUsername,\n    password,\n    setPassword\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: defaultContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children);\n};\nexport default AuthContextProvider;","map":{"version":3,"sources":["/Users/obscurax/Documents/Études/Applications Web/react-gambling-project/src/context/AuthContext.js"],"names":["React","useEffect","useState","createContext","useContext","AuthContext","useAuth","AuthContextProvider","children","prevAuth","window","localStorage","getItem","prevUsername","prevPassword","authenticated","setAuthenticated","username","setUsername","password","setPassword","console","log","removeItem","handleAuthStatus","status","isOnline","ChatAPI","subscribeToFriendStatus","props","friend","id","handleStatusChange","cleanup","unsubscribeFromFriendStatus","defaultContext"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmDC,UAAnD,QAAoE,OAApE;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AAEP,OAAO,SAASG,OAAT,GAAmB;AACtB,SAAOF,UAAU,CAACC,WAAD,CAAjB;AACH;AAED,OAAO,MAAME,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC/C,QAAMC,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,KAAgD,KAAjE;AACA,QAAMC,YAAY,GAAGH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,KAA2C,IAAhE;AACA,QAAME,YAAY,GAAGJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,KAA2C,IAAhE;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAACO,QAAD,CAAlD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACW,YAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACY,YAAD,CAAxC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBE,QAAtB,EAAgCJ,aAAhC;AAEAd,EAAAA,SAAS,CACL,MAAM;AACFS,IAAAA,MAAM,CAACC,YAAP,CAAoBY,UAApB,CAA+B,eAA/B;AACAb,IAAAA,MAAM,CAACC,YAAP,CAAoBY,UAApB,CAA+B,UAA/B;AACAb,IAAAA,MAAM,CAACC,YAAP,CAAoBY,UAApB,CAA+B,UAA/B;AACH,GALI,EAML,CAACR,aAAD,EAAgBE,QAAhB,EAA0BE,QAA1B,CANK,CAAT;AASAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASuB,gBAAT,CAA0BT,aAA1B,EAAyC;AACrCC,MAAAA,gBAAgB,CAACS,MAAM,CAACC,QAAR,CAAhB;AACH;;AAEDC,IAAAA,OAAO,CAACC,uBAAR,CAAgCC,KAAK,CAACC,MAAN,CAAaC,EAA7C,EAAiDC,kBAAjD;AACA,WAAO,SAASC,OAAT,GAAmB;AAAON,MAAAA,OAAO,CAACO,2BAAR,CAAoCL,KAAK,CAACC,MAAN,CAAaC,EAAjD,EAAqDC,kBAArD;AAA8E,KAA/G;AAAmH,GAN9G,CAAT;AAQI,QAAMG,cAAc,GAAG;AACnBpB,IAAAA,aADmB;AACJC,IAAAA,gBADI;AAEnBC,IAAAA,QAFmB;AAETC,IAAAA,WAFS;AAGnBC,IAAAA,QAHmB;AAGTC,IAAAA;AAHS,GAAvB;AAMA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEe,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3B,QADL,CADJ;AAKH,CAtCE;AAwCH,eAAeD,mBAAf","sourcesContent":["import React, {useEffect, useState, createContext, useContext} from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport const AuthContextProvider = ({children}) => {\n    const prevAuth = window.localStorage.getItem('authenticated') || false;\n    const prevUsername = window.localStorage.getItem('username') || null;\n    const prevPassword = window.localStorage.getItem('password') || null;\n    const [authenticated, setAuthenticated] = useState(prevAuth);\n    const [username, setUsername] = useState(prevUsername);\n    const [password, setPassword] = useState(prevPassword);\n\n    console.log(username, password, authenticated);\n\n    useEffect(\n        () => {\n            window.localStorage.removeItem('authenticated');\n            window.localStorage.removeItem('username');\n            window.localStorage.removeItem('password');\n        },\n        [authenticated, username, password]\n    );\n\n    useEffect(() => {\n        function handleAuthStatus(authenticated) {\n            setAuthenticated(status.isOnline);\n        }\n\n        ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n        return function cleanup() {      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);    };  });\n\n        const defaultContext = {\n            authenticated, setAuthenticated,\n            username, setUsername,\n            password, setPassword\n        };\n\n        return (\n            <AuthContext.Provider value={defaultContext}>\n                {children}\n            </AuthContext.Provider>\n        );\n    };\n\n    export default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}