{"ast":null,"code":"'use strict';\n\nconst Namespace = require('./namespace');\n\nlet count = 0;\n\nclass ParentNamespace extends Namespace {\n  constructor(server) {\n    super(server, '/_' + count++);\n    this.children = new Set();\n  }\n\n  initAdapter() {}\n\n  emit() {\n    const args = Array.prototype.slice.call(arguments);\n    this.children.forEach(nsp => {\n      nsp.rooms = this.rooms;\n      nsp.flags = this.flags;\n      nsp.emit.apply(nsp, args);\n    });\n    this.rooms = [];\n    this.flags = {};\n  }\n\n  createChild(name) {\n    const namespace = new Namespace(this.server, name);\n    namespace.fns = this.fns.slice(0);\n    this.listeners('connect').forEach(listener => namespace.on('connect', listener));\n    this.listeners('connection').forEach(listener => namespace.on('connection', listener));\n    this.children.add(namespace);\n    this.server.nsps[name] = namespace;\n    return namespace;\n  }\n\n}\n\nmodule.exports = ParentNamespace;","map":{"version":3,"sources":["/Users/obscurax/Documents/Études/Applications Web/react-gambling-project/node_modules/socket.io/lib/parent-namespace.js"],"names":["Namespace","require","count","ParentNamespace","constructor","server","children","Set","initAdapter","emit","args","Array","prototype","slice","call","arguments","forEach","nsp","rooms","flags","apply","createChild","name","namespace","fns","listeners","listener","on","add","nsps","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAEtCI,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAMA,MAAN,EAAc,OAAQH,KAAK,EAA3B;AACA,SAAKI,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACD;;AAEDC,EAAAA,WAAW,GAAG,CAAE;;AAEhBC,EAAAA,IAAI,GAAG;AACL,UAAMC,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAb;AAEA,SAAKT,QAAL,CAAcU,OAAd,CAAsBC,GAAG,IAAI;AAC3BA,MAAAA,GAAG,CAACC,KAAJ,GAAY,KAAKA,KAAjB;AACAD,MAAAA,GAAG,CAACE,KAAJ,GAAY,KAAKA,KAAjB;AACAF,MAAAA,GAAG,CAACR,IAAJ,CAASW,KAAT,CAAeH,GAAf,EAAoBP,IAApB;AACD,KAJD;AAKA,SAAKQ,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAMC,SAAS,GAAG,IAAIvB,SAAJ,CAAc,KAAKK,MAAnB,EAA2BiB,IAA3B,CAAlB;AACAC,IAAAA,SAAS,CAACC,GAAV,GAAgB,KAAKA,GAAL,CAASX,KAAT,CAAe,CAAf,CAAhB;AACA,SAAKY,SAAL,CAAe,SAAf,EAA0BT,OAA1B,CAAkCU,QAAQ,IAAIH,SAAS,CAACI,EAAV,CAAa,SAAb,EAAwBD,QAAxB,CAA9C;AACA,SAAKD,SAAL,CAAe,YAAf,EAA6BT,OAA7B,CAAqCU,QAAQ,IAAIH,SAAS,CAACI,EAAV,CAAa,YAAb,EAA2BD,QAA3B,CAAjD;AACA,SAAKpB,QAAL,CAAcsB,GAAd,CAAkBL,SAAlB;AACA,SAAKlB,MAAL,CAAYwB,IAAZ,CAAiBP,IAAjB,IAAyBC,SAAzB;AACA,WAAOA,SAAP;AACD;;AA7BqC;;AAgCxCO,MAAM,CAACC,OAAP,GAAiB5B,eAAjB","sourcesContent":["'use strict';\n\nconst Namespace = require('./namespace');\n\nlet count = 0;\n\nclass ParentNamespace extends Namespace {\n\n  constructor(server) {\n    super(server, '/_' + (count++));\n    this.children = new Set();\n  }\n\n  initAdapter() {}\n\n  emit() {\n    const args = Array.prototype.slice.call(arguments);\n\n    this.children.forEach(nsp => {\n      nsp.rooms = this.rooms;\n      nsp.flags = this.flags;\n      nsp.emit.apply(nsp, args);\n    });\n    this.rooms = [];\n    this.flags = {};\n  }\n\n  createChild(name) {\n    const namespace = new Namespace(this.server, name);\n    namespace.fns = this.fns.slice(0);\n    this.listeners('connect').forEach(listener => namespace.on('connect', listener));\n    this.listeners('connection').forEach(listener => namespace.on('connection', listener));\n    this.children.add(namespace);\n    this.server.nsps[name] = namespace;\n    return namespace;\n  }\n}\n\nmodule.exports = ParentNamespace;\n"]},"metadata":{},"sourceType":"script"}