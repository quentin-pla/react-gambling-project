{"ast":null,"code":"/**\n * Module requirements.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar zlib = require('zlib');\n\nvar accepts = require('accepts');\n\nvar util = require('util');\n\nvar debug = require('debug')('engine:polling');\n\nvar compressionMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n};\n/**\n * Exports the constructor.\n */\n\nmodule.exports = Polling;\n/**\n * HTTP polling constructor.\n *\n * @api public.\n */\n\nfunction Polling(req) {\n  Transport.call(this, req);\n  this.closeTimeout = 30 * 1000;\n  this.maxHttpBufferSize = null;\n  this.httpCompression = null;\n}\n/**\n * Inherits from Transport.\n *\n * @api public.\n */\n\n\nutil.inherits(Polling, Transport);\n/**\n * Transport name\n *\n * @api public\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Overrides onRequest.\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nPolling.prototype.onRequest = function (req) {\n  var res = req.res;\n\n  if ('GET' === req.method) {\n    this.onPollRequest(req, res);\n  } else if ('POST' === req.method) {\n    this.onDataRequest(req, res);\n  } else {\n    res.writeHead(500);\n    res.end();\n  }\n};\n/**\n * The client sends a request awaiting for us to send data.\n *\n * @api private\n */\n\n\nPolling.prototype.onPollRequest = function (req, res) {\n  if (this.req) {\n    debug('request overlap'); // assert: this.res, '.req and .res should be (un)set together'\n\n    this.onError('overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  debug('setting request');\n  this.req = req;\n  this.res = res;\n  var self = this;\n\n  function onClose() {\n    self.onError('poll connection closed prematurely');\n  }\n\n  function cleanup() {\n    req.removeListener('close', onClose);\n    self.req = self.res = null;\n  }\n\n  req.cleanup = cleanup;\n  req.on('close', onClose);\n  this.writable = true;\n  this.emit('drain'); // if we're still writable but had a pending close, trigger an empty send\n\n  if (this.writable && this.shouldClose) {\n    debug('triggering empty send to append close packet');\n    this.send([{\n      type: 'noop'\n    }]);\n  }\n};\n/**\n * The client sends a request with data.\n *\n * @api private\n */\n\n\nPolling.prototype.onDataRequest = function (req, res) {\n  if (this.dataReq) {\n    // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n    this.onError('data request overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  var isBinary = 'application/octet-stream' === req.headers['content-type'];\n  this.dataReq = req;\n  this.dataRes = res;\n  var chunks = isBinary ? Buffer.concat([]) : '';\n  var self = this;\n\n  function cleanup() {\n    req.removeListener('data', onData);\n    req.removeListener('end', onEnd);\n    req.removeListener('close', onClose);\n    self.dataReq = self.dataRes = chunks = null;\n  }\n\n  function onClose() {\n    cleanup();\n    self.onError('data request connection closed prematurely');\n  }\n\n  function onData(data) {\n    var contentLength;\n\n    if (isBinary) {\n      chunks = Buffer.concat([chunks, data]);\n      contentLength = chunks.length;\n    } else {\n      chunks += data;\n      contentLength = Buffer.byteLength(chunks);\n    }\n\n    if (contentLength > self.maxHttpBufferSize) {\n      chunks = isBinary ? Buffer.concat([]) : '';\n      req.connection.destroy();\n    }\n  }\n\n  function onEnd() {\n    self.onData(chunks);\n    var headers = {\n      // text/html is required instead of text/plain to avoid an\n      // unwanted download dialog on certain user-agents (GH-43)\n      'Content-Type': 'text/html',\n      'Content-Length': 2\n    };\n    res.writeHead(200, self.headers(req, headers));\n    res.end('ok');\n    cleanup();\n  }\n\n  req.on('close', onClose);\n  if (!isBinary) req.setEncoding('utf8');\n  req.on('data', onData);\n  req.on('end', onEnd);\n};\n/**\n * Processes the incoming data payload.\n *\n * @param {String} encoded payload\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  debug('received \"%s\"', data);\n  var self = this;\n\n  var callback = function (packet) {\n    if ('close' === packet.type) {\n      debug('got xhr close packet');\n      self.onClose();\n      return false;\n    }\n\n    self.onPacket(packet);\n  };\n\n  parser.decodePayload(data, callback);\n};\n/**\n * Overrides onClose.\n *\n * @api private\n */\n\n\nPolling.prototype.onClose = function () {\n  if (this.writable) {\n    // close pending poll request\n    this.send([{\n      type: 'noop'\n    }]);\n  }\n\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Writes a packet payload.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nPolling.prototype.send = function (packets) {\n  this.writable = false;\n\n  if (this.shouldClose) {\n    debug('appending close packet to payload');\n    packets.push({\n      type: 'close'\n    });\n    this.shouldClose();\n    this.shouldClose = null;\n  }\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    var compress = packets.some(function (packet) {\n      return packet.options && packet.options.compress;\n    });\n    self.write(data, {\n      compress: compress\n    });\n  });\n};\n/**\n * Writes data as response to poll request.\n *\n * @param {String} data\n * @param {Object} options\n * @api private\n */\n\n\nPolling.prototype.write = function (data, options) {\n  debug('writing \"%s\"', data);\n  var self = this;\n  this.doWrite(data, options, function () {\n    self.req.cleanup();\n  });\n};\n/**\n * Performs the write.\n *\n * @api private\n */\n\n\nPolling.prototype.doWrite = function (data, options, callback) {\n  var self = this; // explicit UTF-8 is required for pages not served under utf\n\n  var isString = typeof data === 'string';\n  var contentType = isString ? 'text/plain; charset=UTF-8' : 'application/octet-stream';\n  var headers = {\n    'Content-Type': contentType\n  };\n\n  if (!this.httpCompression || !options.compress) {\n    respond(data);\n    return;\n  }\n\n  var len = isString ? Buffer.byteLength(data) : data.length;\n\n  if (len < this.httpCompression.threshold) {\n    respond(data);\n    return;\n  }\n\n  var encoding = accepts(this.req).encodings(['gzip', 'deflate']);\n\n  if (!encoding) {\n    respond(data);\n    return;\n  }\n\n  this.compress(data, encoding, function (err, data) {\n    if (err) {\n      self.res.writeHead(500);\n      self.res.end();\n      callback(err);\n      return;\n    }\n\n    headers['Content-Encoding'] = encoding;\n    respond(data);\n  });\n\n  function respond(data) {\n    headers['Content-Length'] = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n    self.res.writeHead(200, self.headers(self.req, headers));\n    self.res.end(data);\n    callback();\n  }\n};\n/**\n * Compresses data.\n *\n * @api private\n */\n\n\nPolling.prototype.compress = function (data, encoding, callback) {\n  debug('compressing');\n  var buffers = [];\n  var nread = 0;\n  compressionMethods[encoding](this.httpCompression).on('error', callback).on('data', function (chunk) {\n    buffers.push(chunk);\n    nread += chunk.length;\n  }).on('end', function () {\n    callback(null, Buffer.concat(buffers, nread));\n  }).end(data);\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function (fn) {\n  debug('closing');\n  var self = this;\n  var closeTimeoutTimer;\n\n  if (this.dataReq) {\n    debug('aborting ongoing data request');\n    this.dataReq.destroy();\n  }\n\n  if (this.writable) {\n    debug('transport writable - closing right away');\n    this.send([{\n      type: 'close'\n    }]);\n    onClose();\n  } else if (this.discarded) {\n    debug('transport discarded - closing right away');\n    onClose();\n  } else {\n    debug('transport not writable - buffering orderly close');\n    this.shouldClose = onClose;\n    closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n  }\n\n  function onClose() {\n    clearTimeout(closeTimeoutTimer);\n    fn();\n    self.onClose();\n  }\n};\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\n\nPolling.prototype.headers = function (req, headers) {\n  headers = headers || {}; // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n\n  var ua = req.headers['user-agent'];\n\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n\n  this.emit('headers', headers);\n  return headers;\n};","map":{"version":3,"sources":["/Users/obscurax/Documents/Études/Applications Web/react-gambling-project/node_modules/engine.io/lib/transports/polling.js"],"names":["Transport","require","parser","zlib","accepts","util","debug","compressionMethods","gzip","createGzip","deflate","createDeflate","module","exports","Polling","req","call","closeTimeout","maxHttpBufferSize","httpCompression","inherits","prototype","name","onRequest","res","method","onPollRequest","onDataRequest","writeHead","end","onError","self","onClose","cleanup","removeListener","on","writable","emit","shouldClose","send","type","dataReq","isBinary","headers","dataRes","chunks","Buffer","concat","onData","onEnd","data","contentLength","length","byteLength","connection","destroy","setEncoding","callback","packet","onPacket","decodePayload","packets","push","encodePayload","supportsBinary","compress","some","options","write","doWrite","isString","contentType","respond","len","threshold","encoding","encodings","err","buffers","nread","chunk","doClose","fn","closeTimeoutTimer","discarded","setTimeout","clearTimeout","ua","indexOf"],"mappings":"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","sourcesContent":["\n/**\n * Module requirements.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar zlib = require('zlib');\nvar accepts = require('accepts');\nvar util = require('util');\nvar debug = require('debug')('engine:polling');\n\nvar compressionMethods = {\n  gzip: zlib.createGzip,\n  deflate: zlib.createDeflate\n};\n\n/**\n * Exports the constructor.\n */\n\nmodule.exports = Polling;\n\n/**\n * HTTP polling constructor.\n *\n * @api public.\n */\n\nfunction Polling (req) {\n  Transport.call(this, req);\n\n  this.closeTimeout = 30 * 1000;\n  this.maxHttpBufferSize = null;\n  this.httpCompression = null;\n}\n\n/**\n * Inherits from Transport.\n *\n * @api public.\n */\n\nutil.inherits(Polling, Transport);\n\n/**\n * Transport name\n *\n * @api public\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Overrides onRequest.\n *\n * @param {http.IncomingMessage}\n * @api private\n */\n\nPolling.prototype.onRequest = function (req) {\n  var res = req.res;\n\n  if ('GET' === req.method) {\n    this.onPollRequest(req, res);\n  } else if ('POST' === req.method) {\n    this.onDataRequest(req, res);\n  } else {\n    res.writeHead(500);\n    res.end();\n  }\n};\n\n/**\n * The client sends a request awaiting for us to send data.\n *\n * @api private\n */\n\nPolling.prototype.onPollRequest = function (req, res) {\n  if (this.req) {\n    debug('request overlap');\n    // assert: this.res, '.req and .res should be (un)set together'\n    this.onError('overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  debug('setting request');\n\n  this.req = req;\n  this.res = res;\n\n  var self = this;\n\n  function onClose () {\n    self.onError('poll connection closed prematurely');\n  }\n\n  function cleanup () {\n    req.removeListener('close', onClose);\n    self.req = self.res = null;\n  }\n\n  req.cleanup = cleanup;\n  req.on('close', onClose);\n\n  this.writable = true;\n  this.emit('drain');\n\n  // if we're still writable but had a pending close, trigger an empty send\n  if (this.writable && this.shouldClose) {\n    debug('triggering empty send to append close packet');\n    this.send([{ type: 'noop' }]);\n  }\n};\n\n/**\n * The client sends a request with data.\n *\n * @api private\n */\n\nPolling.prototype.onDataRequest = function (req, res) {\n  if (this.dataReq) {\n    // assert: this.dataRes, '.dataReq and .dataRes should be (un)set together'\n    this.onError('data request overlap from client');\n    res.writeHead(500);\n    res.end();\n    return;\n  }\n\n  var isBinary = 'application/octet-stream' === req.headers['content-type'];\n\n  this.dataReq = req;\n  this.dataRes = res;\n\n  var chunks = isBinary ? Buffer.concat([]) : '';\n  var self = this;\n\n  function cleanup () {\n    req.removeListener('data', onData);\n    req.removeListener('end', onEnd);\n    req.removeListener('close', onClose);\n    self.dataReq = self.dataRes = chunks = null;\n  }\n\n  function onClose () {\n    cleanup();\n    self.onError('data request connection closed prematurely');\n  }\n\n  function onData (data) {\n    var contentLength;\n    if (isBinary) {\n      chunks = Buffer.concat([chunks, data]);\n      contentLength = chunks.length;\n    } else {\n      chunks += data;\n      contentLength = Buffer.byteLength(chunks);\n    }\n\n    if (contentLength > self.maxHttpBufferSize) {\n      chunks = isBinary ? Buffer.concat([]) : '';\n      req.connection.destroy();\n    }\n  }\n\n  function onEnd () {\n    self.onData(chunks);\n\n    var headers = {\n      // text/html is required instead of text/plain to avoid an\n      // unwanted download dialog on certain user-agents (GH-43)\n      'Content-Type': 'text/html',\n      'Content-Length': 2\n    };\n\n    res.writeHead(200, self.headers(req, headers));\n    res.end('ok');\n    cleanup();\n  }\n\n  req.on('close', onClose);\n  if (!isBinary) req.setEncoding('utf8');\n  req.on('data', onData);\n  req.on('end', onEnd);\n};\n\n/**\n * Processes the incoming data payload.\n *\n * @param {String} encoded payload\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  debug('received \"%s\"', data);\n  var self = this;\n  var callback = function (packet) {\n    if ('close' === packet.type) {\n      debug('got xhr close packet');\n      self.onClose();\n      return false;\n    }\n\n    self.onPacket(packet);\n  };\n\n  parser.decodePayload(data, callback);\n};\n\n/**\n * Overrides onClose.\n *\n * @api private\n */\n\nPolling.prototype.onClose = function () {\n  if (this.writable) {\n    // close pending poll request\n    this.send([{ type: 'noop' }]);\n  }\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Writes a packet payload.\n *\n * @param {Object} packet\n * @api private\n */\n\nPolling.prototype.send = function (packets) {\n  this.writable = false;\n\n  if (this.shouldClose) {\n    debug('appending close packet to payload');\n    packets.push({ type: 'close' });\n    this.shouldClose();\n    this.shouldClose = null;\n  }\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    var compress = packets.some(function (packet) {\n      return packet.options && packet.options.compress;\n    });\n    self.write(data, { compress: compress });\n  });\n};\n\n/**\n * Writes data as response to poll request.\n *\n * @param {String} data\n * @param {Object} options\n * @api private\n */\n\nPolling.prototype.write = function (data, options) {\n  debug('writing \"%s\"', data);\n  var self = this;\n  this.doWrite(data, options, function () {\n    self.req.cleanup();\n  });\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nPolling.prototype.doWrite = function (data, options, callback) {\n  var self = this;\n\n  // explicit UTF-8 is required for pages not served under utf\n  var isString = typeof data === 'string';\n  var contentType = isString\n    ? 'text/plain; charset=UTF-8'\n    : 'application/octet-stream';\n\n  var headers = {\n    'Content-Type': contentType\n  };\n\n  if (!this.httpCompression || !options.compress) {\n    respond(data);\n    return;\n  }\n\n  var len = isString ? Buffer.byteLength(data) : data.length;\n  if (len < this.httpCompression.threshold) {\n    respond(data);\n    return;\n  }\n\n  var encoding = accepts(this.req).encodings(['gzip', 'deflate']);\n  if (!encoding) {\n    respond(data);\n    return;\n  }\n\n  this.compress(data, encoding, function (err, data) {\n    if (err) {\n      self.res.writeHead(500);\n      self.res.end();\n      callback(err);\n      return;\n    }\n\n    headers['Content-Encoding'] = encoding;\n    respond(data);\n  });\n\n  function respond (data) {\n    headers['Content-Length'] = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n    self.res.writeHead(200, self.headers(self.req, headers));\n    self.res.end(data);\n    callback();\n  }\n};\n\n/**\n * Compresses data.\n *\n * @api private\n */\n\nPolling.prototype.compress = function (data, encoding, callback) {\n  debug('compressing');\n\n  var buffers = [];\n  var nread = 0;\n\n  compressionMethods[encoding](this.httpCompression)\n    .on('error', callback)\n    .on('data', function (chunk) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    })\n    .on('end', function () {\n      callback(null, Buffer.concat(buffers, nread));\n    })\n    .end(data);\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function (fn) {\n  debug('closing');\n\n  var self = this;\n  var closeTimeoutTimer;\n\n  if (this.dataReq) {\n    debug('aborting ongoing data request');\n    this.dataReq.destroy();\n  }\n\n  if (this.writable) {\n    debug('transport writable - closing right away');\n    this.send([{ type: 'close' }]);\n    onClose();\n  } else if (this.discarded) {\n    debug('transport discarded - closing right away');\n    onClose();\n  } else {\n    debug('transport not writable - buffering orderly close');\n    this.shouldClose = onClose;\n    closeTimeoutTimer = setTimeout(onClose, this.closeTimeout);\n  }\n\n  function onClose () {\n    clearTimeout(closeTimeoutTimer);\n    fn();\n    self.onClose();\n  }\n};\n\n/**\n * Returns headers for a response.\n *\n * @param {http.IncomingMessage} request\n * @param {Object} extra headers\n * @api private\n */\n\nPolling.prototype.headers = function (req, headers) {\n  headers = headers || {};\n\n  // prevent XSS warnings on IE\n  // https://github.com/LearnBoost/socket.io/pull/1333\n  var ua = req.headers['user-agent'];\n  if (ua && (~ua.indexOf(';MSIE') || ~ua.indexOf('Trident/'))) {\n    headers['X-XSS-Protection'] = '0';\n  }\n\n  this.emit('headers', headers);\n  return headers;\n};\n"]},"metadata":{},"sourceType":"script"}