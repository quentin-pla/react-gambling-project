{"ast":null,"code":"var _jsxFileName = \"/Users/obscurax/Documents/E\\u0301tudes/Applications Web/react-gambling-project/src/components/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Card, Form, Input, Button } from '../auth/AuthForms';\nimport { useAuth } from \"../../context/auth\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport axios from 'axios';\n\nfunction Login() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n\n  function postLogin() {\n    axios.post(\"https://www.somePlace.com/auth/login\", {\n      userName,\n      password\n    }).then(result => {\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"username\",\n    value: userName,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: postLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Don't have an account?\"), isError && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"The username or password provided were incorrect!\"));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/obscurax/Documents/Études/Applications Web/react-gambling-project/src/components/pages/Login.js"],"names":["React","useState","Link","Card","Form","Input","Button","useAuth","Redirect","axios","Login","isLoggedIn","setLoggedIn","isError","setIsError","userName","setUserName","password","setPassword","setAuthTokens","postLogin","post","then","result","status","data","catch","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AACb,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAoBZ,OAAO,EAAjC;;AAEA,WAASa,SAAT,GAAqB;AACjBX,IAAAA,KAAK,CAACY,IAAN,CAAW,sCAAX,EAAmD;AAC/CN,MAAAA,QAD+C;AAE/CE,MAAAA;AAF+C,KAAnD,EAGGK,IAHH,CAGQC,MAAM,IAAI;AACd,UAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACvBL,QAAAA,aAAa,CAACI,MAAM,CAACE,IAAR,CAAb;AACAb,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH,OAHD,MAGO;AACHE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KAVD,EAUGY,KAVH,CAUSC,CAAC,IAAI;AACVb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAZD;AAaH;;AAED,MAAIH,UAAJ,EAAgB;AACZ,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEI,QAFX;AAGI,IAAA,QAAQ,EAAEY,CAAC,IAAI;AACXX,MAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,KALL;AAMI,IAAA,WAAW,EAAC,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEZ,QAFX;AAGI,IAAA,QAAQ,EAAEU,CAAC,IAAI;AACXT,MAAAA,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,KALL;AAMI,IAAA,WAAW,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBJ,CADJ,EAoBI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBJ,EAqBMP,OAAO,IAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDArBhB,CADJ;AAyBH;;AAED,eAAeH,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Card, Form, Input, Button } from '../auth/AuthForms';\nimport {useAuth} from \"../../context/auth\";\nimport Redirect from \"react-router-dom/es/Redirect\";\nimport axios from 'axios';\n\nfunction Login() {\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const { setAuthTokens } = useAuth();\n\n    function postLogin() {\n        axios.post(\"https://www.somePlace.com/auth/login\", {\n            userName,\n            password\n        }).then(result => {\n            if (result.status === 200) {\n                setAuthTokens(result.data);\n                setLoggedIn(true);\n            } else {\n                setIsError(true);\n            }\n        }).catch(e => {\n            setIsError(true);\n        });\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Card>\n            <Form>\n                <Input\n                    type=\"username\"\n                    value={userName}\n                    onChange={e => {\n                        setUserName(e.target.value);\n                    }}\n                    placeholder=\"email\"\n                />\n                <Input\n                    type=\"password\"\n                    value={password}\n                    onChange={e => {\n                        setPassword(e.target.value);\n                    }}\n                    placeholder=\"password\"\n                />\n                <Button onClick={postLogin}>Sign In</Button>\n            </Form>\n            <Link to=\"/signup\">Don't have an account?</Link>\n            { isError &&<Error>The username or password provided were incorrect!</Error> }\n        </Card>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}