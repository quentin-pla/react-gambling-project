{"ast":null,"code":"var _jsxFileName = \"/Users/obscurax/Documents/E\\u0301tudes/Applications Web/react-gambling-project/src/components/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { Form, Button, Card, Container, Row } from \"react-bootstrap\";\n\nfunction Login(props) {\n  const referer = props.location.state != null ? props.location.state.referer : '/';\n  const socket = io();\n  const auth = useAuth();\n  const history = useHistory();\n  const [isError, setIsError] = useState(false);\n\n  function postLogin() {\n    socket.emit(\"login\", auth.username, auth.password);\n    socket.on(\"auth_info\", function (success) {\n      if (success) {\n        auth.setAuthenticated(true);\n      } else {\n        auth.setAuthenticated(false);\n        setIsError(true);\n      }\n    });\n    return false;\n  }\n\n  if (auth.authenticated) {\n    return React.createElement(Redirect, {\n      to: referer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  function handleClick(e) {\n    e.preventDefault();\n    history.push(\"/signup\");\n  }\n\n  return React.createElement(Container, {\n    className: \"flex-center position-ref full-height\",\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: '20rem'\n    },\n    className: \"text-center no-boder fade-effect\",\n    body: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Card.Img, {\n    width: \"400\",\n    height: \"200\",\n    variant: \"top\",\n    src: process.env.PUBLIC_URL + '/logo.svg',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => {\n      auth.setUsername(e.target.value);\n    },\n    placeholder: \"Identifiant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"password\",\n    onChange: e => {\n      auth.setPassword(e.target.value);\n    },\n    placeholder: \"Mot de passe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"dark\",\n    className: \"mt-4 border-0\",\n    onClick: postLogin,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Connexion\"), React.createElement(Button, {\n    className: \"mb-4 text-white purple-gradient border-0\",\n    onClick: handleClick,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cr\\xE9er un compte\")), React.createElement(Card.Text, {\n    className: \"text-danger error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, isError ? \"Erreur d'authentification\" : \"\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/obscurax/Documents/EÃÅtudes/Applications Web/react-gambling-project/src/components/pages/Login.js"],"names":["React","useState","useHistory","Redirect","io","useAuth","Form","Button","Card","Container","Row","Login","props","referer","location","state","socket","auth","history","isError","setIsError","postLogin","emit","username","password","on","success","setAuthenticated","authenticated","handleClick","e","preventDefault","push","width","process","env","PUBLIC_URL","setUsername","target","value","setPassword"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Redirect} from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport {useAuth} from \"../../context/AuthContext\";\nimport {Form, Button, Card, Container, Row} from \"react-bootstrap\";\n\nfunction Login(props) {\n    const referer = (props.location.state != null) ? props.location.state.referer : '/';\n    const socket = io();\n    const auth = useAuth();\n    const history = useHistory();\n    const [isError, setIsError] = useState(false);\n\n    function postLogin() {\n        socket.emit(\"login\", auth.username, auth.password);\n        socket.on(\"auth_info\", function(success) {\n            if (success) {\n                auth.setAuthenticated(true);\n            }\n            else {\n                auth.setAuthenticated(false);\n                setIsError(true);\n            }\n        });\n        return false;\n    }\n\n    if (auth.authenticated) {\n        return <Redirect to={referer} />;\n    }\n\n    function handleClick(e) {\n        e.preventDefault();\n        history.push(\"/signup\");\n    }\n\n    return (\n        <Container className=\"flex-center position-ref full-height\" fluid>\n            <Row className=\"justify-content-md-center\">\n                <Card style={{ width: '20rem' }} className=\"text-center no-boder fade-effect\" body>\n                    <Card.Img width=\"400\" height=\"200\" variant=\"top\" src={process.env.PUBLIC_URL + '/logo.svg'} />\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control\n                                type=\"text\"\n                                onChange={e => {\n                                    auth.setUsername(e.target.value);\n                                }}\n                                placeholder=\"Identifiant\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Control\n                                type=\"password\"\n                                onChange={e => {\n                                    auth.setPassword(e.target.value);\n                                }}\n                                placeholder=\"Mot de passe\"\n                            />\n                        </Form.Group>\n                        <Button variant=\"dark\" className=\"mt-4 border-0\" onClick={postLogin} block>\n                            Connexion\n                        </Button>\n                        <Button className=\"mb-4 text-white purple-gradient border-0\" onClick={handleClick} block>\n                            Cr√©er un compte\n                        </Button>\n                    </Form>\n                    <Card.Text className=\"text-danger error-message\">{isError ? \"Erreur d'authentification\" : \"\"}</Card.Text>\n                </Card>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}