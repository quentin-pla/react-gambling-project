{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Polling = require('./polling');\n\nvar qs = require('querystring');\n\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\n\nvar util = require('util');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONP;\n/**\n * JSON-P polling transport.\n *\n * @api public\n */\n\nfunction JSONP(req) {\n  Polling.call(this, req);\n  this.head = '___eio[' + (req._query.j || '').replace(/[^0-9]/g, '') + '](';\n  this.foot = ');';\n}\n/**\n * Inherits from Polling.\n */\n\n\nutil.inherits(JSONP, Polling);\n/**\n * Handles incoming data.\n * Due to a bug in \\n handling by browsers, we expect a escaped string.\n *\n * @api private\n */\n\nJSONP.prototype.onData = function (data) {\n  // we leverage the qs module so that we get built-in DoS protection\n  // and the fast alternative to decodeURIComponent\n  data = qs.parse(data).d;\n\n  if ('string' === typeof data) {\n    // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n    // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n    data = data.replace(rSlashes, function (match, slashes) {\n      return slashes ? match : '\\n';\n    });\n    Polling.prototype.onData.call(this, data.replace(rDoubleSlashes, '\\\\n'));\n  }\n};\n/**\n * Performs the write.\n *\n * @api private\n */\n\n\nJSONP.prototype.doWrite = function (data, options, callback) {\n  // we must output valid javascript, not valid json\n  // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n  var js = JSON.stringify(data).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029'); // prepare response\n\n  data = this.head + js + this.foot;\n  Polling.prototype.doWrite.call(this, data, options, callback);\n};","map":{"version":3,"sources":["/Users/obscurax/Documents/EÃÅtudes/Applications Web/react-gambling-project/node_modules/engine.io/lib/transports/polling-jsonp.js"],"names":["Polling","require","qs","rDoubleSlashes","rSlashes","util","module","exports","JSONP","req","call","head","_query","j","replace","foot","inherits","prototype","onData","data","parse","d","match","slashes","doWrite","options","callback","js","JSON","stringify"],"mappings":"AACA;;;AAIA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIE,cAAc,GAAG,QAArB;AACA,IAAIC,QAAQ,GAAG,WAAf;;AACA,IAAIC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;AAEA;;;;;AAIAK,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AAEA;;;;;;AAMA,SAASA,KAAT,CAAgBC,GAAhB,EAAqB;AACnBT,EAAAA,OAAO,CAACU,IAAR,CAAa,IAAb,EAAmBD,GAAnB;AAEA,OAAKE,IAAL,GAAY,YAAY,CAACF,GAAG,CAACG,MAAJ,CAAWC,CAAX,IAAgB,EAAjB,EAAqBC,OAArB,CAA6B,SAA7B,EAAwC,EAAxC,CAAZ,GAA0D,IAAtE;AACA,OAAKC,IAAL,GAAY,IAAZ;AACD;AAED;;;;;AAIAV,IAAI,CAACW,QAAL,CAAcR,KAAd,EAAqBR,OAArB;AAEA;;;;;;;AAOAQ,KAAK,CAACS,SAAN,CAAgBC,MAAhB,GAAyB,UAAUC,IAAV,EAAgB;AACvC;AACA;AACAA,EAAAA,IAAI,GAAGjB,EAAE,CAACkB,KAAH,CAASD,IAAT,EAAeE,CAAtB;;AACA,MAAI,aAAa,OAAOF,IAAxB,EAA8B;AAC5B;AACA;AACAA,IAAAA,IAAI,GAAGA,IAAI,CAACL,OAAL,CAAaV,QAAb,EAAuB,UAAUkB,KAAV,EAAiBC,OAAjB,EAA0B;AACtD,aAAOA,OAAO,GAAGD,KAAH,GAAW,IAAzB;AACD,KAFM,CAAP;AAGAtB,IAAAA,OAAO,CAACiB,SAAR,CAAkBC,MAAlB,CAAyBR,IAAzB,CAA8B,IAA9B,EAAoCS,IAAI,CAACL,OAAL,CAAaX,cAAb,EAA6B,KAA7B,CAApC;AACD;AACF,CAZD;AAcA;;;;;;;AAMAK,KAAK,CAACS,SAAN,CAAgBO,OAAhB,GAA0B,UAAUL,IAAV,EAAgBM,OAAhB,EAAyBC,QAAzB,EAAmC;AAC3D;AACA;AACA,MAAIC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAeV,IAAf,EACNL,OADM,CACE,SADF,EACa,SADb,EAENA,OAFM,CAEE,SAFF,EAEa,SAFb,CAAT,CAH2D,CAO3D;;AACAK,EAAAA,IAAI,GAAG,KAAKR,IAAL,GAAYgB,EAAZ,GAAiB,KAAKZ,IAA7B;AAEAf,EAAAA,OAAO,CAACiB,SAAR,CAAkBO,OAAlB,CAA0Bd,IAA1B,CAA+B,IAA/B,EAAqCS,IAArC,EAA2CM,OAA3C,EAAoDC,QAApD;AACD,CAXD","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Polling = require('./polling');\nvar qs = require('querystring');\nvar rDoubleSlashes = /\\\\\\\\n/g;\nvar rSlashes = /(\\\\)?\\\\n/g;\nvar util = require('util');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONP;\n\n/**\n * JSON-P polling transport.\n *\n * @api public\n */\n\nfunction JSONP (req) {\n  Polling.call(this, req);\n\n  this.head = '___eio[' + (req._query.j || '').replace(/[^0-9]/g, '') + '](';\n  this.foot = ');';\n}\n\n/**\n * Inherits from Polling.\n */\n\nutil.inherits(JSONP, Polling);\n\n/**\n * Handles incoming data.\n * Due to a bug in \\n handling by browsers, we expect a escaped string.\n *\n * @api private\n */\n\nJSONP.prototype.onData = function (data) {\n  // we leverage the qs module so that we get built-in DoS protection\n  // and the fast alternative to decodeURIComponent\n  data = qs.parse(data).d;\n  if ('string' === typeof data) {\n    // client will send already escaped newlines as \\\\\\\\n and newlines as \\\\n\n    // \\\\n must be replaced with \\n and \\\\\\\\n with \\\\n\n    data = data.replace(rSlashes, function (match, slashes) {\n      return slashes ? match : '\\n';\n    });\n    Polling.prototype.onData.call(this, data.replace(rDoubleSlashes, '\\\\n'));\n  }\n};\n\n/**\n * Performs the write.\n *\n * @api private\n */\n\nJSONP.prototype.doWrite = function (data, options, callback) {\n  // we must output valid javascript, not valid json\n  // see: http://timelessrepo.com/json-isnt-a-javascript-subset\n  var js = JSON.stringify(data)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029');\n\n  // prepare response\n  data = this.head + js + this.foot;\n\n  Polling.prototype.doWrite.call(this, data, options, callback);\n};\n"]},"metadata":{},"sourceType":"script"}