{"ast":null,"code":"var _jsxFileName = \"/Users/obscurax/Documents/E\\u0301tudes/Applications Web/react-gambling-project/src/components/routing/PrivateRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  const isAuthenticated = useAuth();\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          referer: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/obscurax/Documents/EÃÅtudes/Applications Web/react-gambling-project/src/components/routing/PrivateRoute.js"],"names":["React","Redirect","Route","useAuth","PrivateRoute","component","Component","rest","isAuthenticated","props","pathname","state","referer","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACrD,QAAMC,eAAe,GAAGL,OAAO,EAA/B;AAEA,SACI,oBAAC,KAAD,oBACQI,IADR;AAEI,IAAA,MAAM,EAAEE,KAAK,IACTD,eAAe,GACX,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADW,GAGX,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAEH,KAAK,CAACI;AAAjB;AAA7B,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAcH;;AAED,eAAeT,YAAf","sourcesContent":["import React from \"react\";\nimport {Redirect, Route} from 'react-router-dom';\nimport {useAuth} from '../../context/AuthContext';\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const isAuthenticated = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{ pathname: \"/login\", state: { referer: props.location } }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;\n\n"]},"metadata":{},"sourceType":"module"}