{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Emitter = require('events').EventEmitter;\n/**\n * Module exports.\n */\n\n\nmodule.exports = Adapter;\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp) {\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = nsp.server.encoder;\n}\n/**\n * Inherits from `EventEmitter`.\n */\n\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function (id, room, fn) {\n  return this.addAll(id, [room], fn);\n};\n/**\n * Adds a socket to a list of room.\n *\n * @param {String} socket id\n * @param {String} rooms\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.addAll = function (id, rooms, fn) {\n  for (var i = 0; i < rooms.length; i++) {\n    var room = rooms[i];\n    this.sids[id] = this.sids[id] || {};\n    this.sids[id][room] = true;\n    this.rooms[room] = this.rooms[room] || Room();\n    this.rooms[room].add(id);\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.del = function (id, room, fn) {\n  if (this.sids[id]) delete this.sids[id][room];\n\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.delAll = function (id, fn) {\n  var rooms = this.sids[id];\n\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n\n  delete this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\n\nAdapter.prototype.broadcast = function (packet, opts) {\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function (encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.clients = function (rooms, fn) {\n  if ('function' == typeof rooms) {\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n  var ids = {};\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = this.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = this.nsp.connected[id];\n\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in this.sids) {\n      if (this.sids.hasOwnProperty(id)) {\n        socket = this.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.clientRooms = function (id, fn) {\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n/**\n* Room constructor.\n*\n* @api private\n*/\n\n\nfunction Room() {\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\n\nRoom.prototype.add = function (id) {\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\n\nRoom.prototype.del = function (id) {\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};","map":{"version":3,"sources":["/Users/obscurax/Documents/Études/Applications Web/react-gambling-project/node_modules/socket.io-adapter/index.js"],"names":["Emitter","require","EventEmitter","module","exports","Adapter","nsp","rooms","sids","encoder","server","prototype","__proto__","add","id","room","fn","addAll","i","length","Room","process","nextTick","bind","del","hasOwnProperty","delAll","broadcast","packet","opts","except","flags","packetOpts","preEncoded","volatile","compress","ids","self","socket","name","encode","encodedPackets","sockets","indexOf","connected","clients","push","clientRooms","Object","keys"],"mappings":"AACA;;;AAIA,IAAIA,OAAO,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAhC;AAEA;;;;;AAIAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;;;;;;;AAOA,SAASA,OAAT,CAAiBC,GAAjB,EAAqB;AACnB,OAAKA,GAAL,GAAWA,GAAX;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKC,OAAL,GAAeH,GAAG,CAACI,MAAJ,CAAWD,OAA1B;AACD;AAED;;;;;AAIAJ,OAAO,CAACM,SAAR,CAAkBC,SAAlB,GAA8BZ,OAAO,CAACW,SAAtC;AAEA;;;;;;;;;AASAN,OAAO,CAACM,SAAR,CAAkBE,GAAlB,GAAwB,UAASC,EAAT,EAAaC,IAAb,EAAmBC,EAAnB,EAAsB;AAC5C,SAAO,KAAKC,MAAL,CAAYH,EAAZ,EAAgB,CAAEC,IAAF,CAAhB,EAA0BC,EAA1B,CAAP;AACD,CAFD;AAIA;;;;;;;;;;AASAX,OAAO,CAACM,SAAR,CAAkBM,MAAlB,GAA2B,UAASH,EAAT,EAAaP,KAAb,EAAoBS,EAApB,EAAuB;AAChD,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIH,IAAI,GAAGR,KAAK,CAACW,CAAD,CAAhB;AACA,SAAKV,IAAL,CAAUM,EAAV,IAAgB,KAAKN,IAAL,CAAUM,EAAV,KAAiB,EAAjC;AACA,SAAKN,IAAL,CAAUM,EAAV,EAAcC,IAAd,IAAsB,IAAtB;AACA,SAAKR,KAAL,CAAWQ,IAAX,IAAmB,KAAKR,KAAL,CAAWQ,IAAX,KAAoBK,IAAI,EAA3C;AACA,SAAKb,KAAL,CAAWQ,IAAX,EAAiBF,GAAjB,CAAqBC,EAArB;AACD;;AACD,MAAIE,EAAJ,EAAQK,OAAO,CAACC,QAAR,CAAiBN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAc,IAAd,CAAjB;AACT,CATD;AAWA;;;;;;;;;;AASAlB,OAAO,CAACM,SAAR,CAAkBa,GAAlB,GAAwB,UAASV,EAAT,EAAaC,IAAb,EAAmBC,EAAnB,EAAsB;AAC5C,MAAI,KAAKR,IAAL,CAAUM,EAAV,CAAJ,EAAmB,OAAO,KAAKN,IAAL,CAAUM,EAAV,EAAcC,IAAd,CAAP;;AAEnB,MAAI,KAAKR,KAAL,CAAWkB,cAAX,CAA0BV,IAA1B,CAAJ,EAAqC;AACnC,SAAKR,KAAL,CAAWQ,IAAX,EAAiBS,GAAjB,CAAqBV,EAArB;AACA,QAAI,KAAKP,KAAL,CAAWQ,IAAX,EAAiBI,MAAjB,KAA4B,CAAhC,EAAmC,OAAO,KAAKZ,KAAL,CAAWQ,IAAX,CAAP;AACpC;;AAED,MAAIC,EAAJ,EAAQK,OAAO,CAACC,QAAR,CAAiBN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAc,IAAd,CAAjB;AACT,CATD;AAWA;;;;;;;;;AAQAlB,OAAO,CAACM,SAAR,CAAkBe,MAAlB,GAA2B,UAASZ,EAAT,EAAaE,EAAb,EAAgB;AACzC,MAAIT,KAAK,GAAG,KAAKC,IAAL,CAAUM,EAAV,CAAZ;;AACA,MAAIP,KAAJ,EAAW;AACT,SAAK,IAAIQ,IAAT,IAAiBR,KAAjB,EAAwB;AACtB,UAAI,KAAKA,KAAL,CAAWkB,cAAX,CAA0BV,IAA1B,CAAJ,EAAqC;AACnC,aAAKR,KAAL,CAAWQ,IAAX,EAAiBS,GAAjB,CAAqBV,EAArB;AACA,YAAI,KAAKP,KAAL,CAAWQ,IAAX,EAAiBI,MAAjB,KAA4B,CAAhC,EAAmC,OAAO,KAAKZ,KAAL,CAAWQ,IAAX,CAAP;AACpC;AACF;AACF;;AACD,SAAO,KAAKP,IAAL,CAAUM,EAAV,CAAP;AAEA,MAAIE,EAAJ,EAAQK,OAAO,CAACC,QAAR,CAAiBN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAc,IAAd,CAAjB;AACT,CAbD;AAeA;;;;;;;;;;;;;AAYAlB,OAAO,CAACM,SAAR,CAAkBgB,SAAlB,GAA8B,UAASC,MAAT,EAAiBC,IAAjB,EAAsB;AAClD,MAAItB,KAAK,GAAGsB,IAAI,CAACtB,KAAL,IAAc,EAA1B;AACA,MAAIuB,MAAM,GAAGD,IAAI,CAACC,MAAL,IAAe,EAA5B;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAL,IAAc,EAA1B;AACA,MAAIC,UAAU,GAAG;AACfC,IAAAA,UAAU,EAAE,IADG;AAEfC,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAFD;AAGfC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI;AAHD,GAAjB;AAKA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,MAAJ;AAEAV,EAAAA,MAAM,CAACtB,GAAP,GAAa,KAAKA,GAAL,CAASiC,IAAtB;AACA,OAAK9B,OAAL,CAAa+B,MAAb,CAAoBZ,MAApB,EAA4B,UAASa,cAAT,EAAyB;AACnD,QAAIlC,KAAK,CAACY,MAAV,EAAkB;AAChB,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIH,IAAI,GAAGsB,IAAI,CAAC9B,KAAL,CAAWA,KAAK,CAACW,CAAD,CAAhB,CAAX;AACA,YAAI,CAACH,IAAL,EAAW;AACX,YAAI2B,OAAO,GAAG3B,IAAI,CAAC2B,OAAnB;;AACA,aAAK,IAAI5B,EAAT,IAAe4B,OAAf,EAAwB;AACtB,cAAIA,OAAO,CAACjB,cAAR,CAAuBX,EAAvB,CAAJ,EAAgC;AAC9B,gBAAIsB,GAAG,CAACtB,EAAD,CAAH,IAAW,CAACgB,MAAM,CAACa,OAAP,CAAe7B,EAAf,CAAhB,EAAoC;AACpCwB,YAAAA,MAAM,GAAGD,IAAI,CAAC/B,GAAL,CAASsC,SAAT,CAAmB9B,EAAnB,CAAT;;AACA,gBAAIwB,MAAJ,EAAY;AACVA,cAAAA,MAAM,CAACV,MAAP,CAAca,cAAd,EAA8BT,UAA9B;AACAI,cAAAA,GAAG,CAACtB,EAAD,CAAH,GAAU,IAAV;AACD;AACF;AACF;AACF;AACF,KAhBD,MAgBO;AACL,WAAK,IAAIA,EAAT,IAAeuB,IAAI,CAAC7B,IAApB,EAA0B;AACxB,YAAI6B,IAAI,CAAC7B,IAAL,CAAUiB,cAAV,CAAyBX,EAAzB,CAAJ,EAAkC;AAChC,cAAI,CAACgB,MAAM,CAACa,OAAP,CAAe7B,EAAf,CAAL,EAAyB;AACzBwB,UAAAA,MAAM,GAAGD,IAAI,CAAC/B,GAAL,CAASsC,SAAT,CAAmB9B,EAAnB,CAAT;AACA,cAAIwB,MAAJ,EAAYA,MAAM,CAACV,MAAP,CAAca,cAAd,EAA8BT,UAA9B;AACb;AACF;AACF;AACF,GA1BD;AA2BD,CAzCD;AA2CA;;;;;;;;;AAQA3B,OAAO,CAACM,SAAR,CAAkBkC,OAAlB,GAA4B,UAAStC,KAAT,EAAgBS,EAAhB,EAAmB;AAC7C,MAAI,cAAc,OAAOT,KAAzB,EAA+B;AAC7BS,IAAAA,EAAE,GAAGT,KAAL;AACAA,IAAAA,KAAK,GAAG,IAAR;AACD;;AAEDA,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AAEA,MAAI6B,GAAG,GAAG,EAAV;AACA,MAAI5B,IAAI,GAAG,EAAX;AACA,MAAI8B,MAAJ;;AAEA,MAAI/B,KAAK,CAACY,MAAV,EAAkB;AAChB,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACY,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIH,IAAI,GAAG,KAAKR,KAAL,CAAWA,KAAK,CAACW,CAAD,CAAhB,CAAX;AACA,UAAI,CAACH,IAAL,EAAW;AACX,UAAI2B,OAAO,GAAG3B,IAAI,CAAC2B,OAAnB;;AACA,WAAK,IAAI5B,EAAT,IAAe4B,OAAf,EAAwB;AACtB,YAAIA,OAAO,CAACjB,cAAR,CAAuBX,EAAvB,CAAJ,EAAgC;AAC9B,cAAIsB,GAAG,CAACtB,EAAD,CAAP,EAAa;AACbwB,UAAAA,MAAM,GAAG,KAAKhC,GAAL,CAASsC,SAAT,CAAmB9B,EAAnB,CAAT;;AACA,cAAIwB,MAAJ,EAAY;AACV9B,YAAAA,IAAI,CAACsC,IAAL,CAAUhC,EAAV;AACAsB,YAAAA,GAAG,CAACtB,EAAD,CAAH,GAAU,IAAV;AACD;AACF;AACF;AACF;AACF,GAhBD,MAgBO;AACL,SAAK,IAAIA,EAAT,IAAe,KAAKN,IAApB,EAA0B;AACxB,UAAI,KAAKA,IAAL,CAAUiB,cAAV,CAAyBX,EAAzB,CAAJ,EAAkC;AAChCwB,QAAAA,MAAM,GAAG,KAAKhC,GAAL,CAASsC,SAAT,CAAmB9B,EAAnB,CAAT;AACA,YAAIwB,MAAJ,EAAY9B,IAAI,CAACsC,IAAL,CAAUhC,EAAV;AACb;AACF;AACF;;AAED,MAAIE,EAAJ,EAAQK,OAAO,CAACC,QAAR,CAAiBN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoBf,IAApB,CAAjB;AACT,CAtCD;AAwCA;;;;;;;;;AAOAH,OAAO,CAACM,SAAR,CAAkBoC,WAAlB,GAAgC,UAASjC,EAAT,EAAaE,EAAb,EAAgB;AAC9C,MAAIT,KAAK,GAAG,KAAKC,IAAL,CAAUM,EAAV,CAAZ;AACA,MAAIE,EAAJ,EAAQK,OAAO,CAACC,QAAR,CAAiBN,EAAE,CAACO,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoBhB,KAAK,GAAGyC,MAAM,CAACC,IAAP,CAAY1C,KAAZ,CAAH,GAAwB,IAAjD,CAAjB;AACT,CAHD;AAKA;;;;;;;AAMA,SAASa,IAAT,GAAe;AACb,MAAI,EAAE,gBAAgBA,IAAlB,CAAJ,EAA6B,OAAO,IAAIA,IAAJ,EAAP;AAC7B,OAAKsB,OAAL,GAAe,EAAf;AACA,OAAKvB,MAAL,GAAc,CAAd;AACD;AAED;;;;;;;;AAOAC,IAAI,CAACT,SAAL,CAAeE,GAAf,GAAqB,UAASC,EAAT,EAAY;AAC/B,MAAI,CAAC,KAAK4B,OAAL,CAAajB,cAAb,CAA4BX,EAA5B,CAAL,EAAsC;AACpC,SAAK4B,OAAL,CAAa5B,EAAb,IAAmB,IAAnB;AACA,SAAKK,MAAL;AACD;AACF,CALD;AAOA;;;;;;;;AAOAC,IAAI,CAACT,SAAL,CAAea,GAAf,GAAqB,UAASV,EAAT,EAAY;AAC/B,MAAI,KAAK4B,OAAL,CAAajB,cAAb,CAA4BX,EAA5B,CAAJ,EAAqC;AACnC,WAAO,KAAK4B,OAAL,CAAa5B,EAAb,CAAP;AACA,SAAKK,MAAL;AACD;AACF,CALD","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\n\n/**\n * Module exports.\n */\n\nmodule.exports = Adapter;\n\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp){\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = nsp.server.encoder;\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function(id, room, fn){\n  return this.addAll(id, [ room ], fn);\n};\n\n/**\n * Adds a socket to a list of room.\n *\n * @param {String} socket id\n * @param {String} rooms\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.addAll = function(id, rooms, fn){\n  for (var i = 0; i < rooms.length; i++) {\n    var room = rooms[i];\n    this.sids[id] = this.sids[id] || {};\n    this.sids[id][room] = true;\n    this.rooms[room] = this.rooms[room] || Room();\n    this.rooms[room].add(id);\n  }\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.del = function(id, room, fn){\n  if (this.sids[id]) delete this.sids[id][room];\n\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.delAll = function(id, fn){\n  var rooms = this.sids[id];\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n  delete this.sids[id];\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\nAdapter.prototype.broadcast = function(packet, opts){\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function(encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.clients = function(rooms, fn){\n  if ('function' == typeof rooms){\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n\n  var ids = {};\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = this.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = this.nsp.connected[id];\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in this.sids) {\n      if (this.sids.hasOwnProperty(id)) {\n        socket = this.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\nAdapter.prototype.clientRooms = function(id, fn){\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n\n/**\n* Room constructor.\n*\n* @api private\n*/\n\nfunction Room(){\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.add = function(id){\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.del = function(id){\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}