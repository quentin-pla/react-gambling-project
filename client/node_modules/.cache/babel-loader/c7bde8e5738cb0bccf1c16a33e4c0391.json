{"ast":null,"code":"var _jsxFileName = \"/Users/obscurax/Documents/E\\u0301tudes/Applications Web/react-gambling-project/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\nimport { Navbar, Nav, NavLink } from \"react-bootstrap\";\nexport default function AuthExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(AuthButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Gambling\"), React.createElement(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    tag: Link,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Home\"), React.createElement(Link, {\n    tag: Link,\n    to: \"/public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Public\"), React.createElement(Link, {\n    tag: Link,\n    to: \"/gambling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Gambling\"))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(PublicPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(LoginPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(PrivateRoute, {\n    path: \"/gambling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ProtectedPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })))));\n}\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n\n};\n\nfunction AuthButton() {\n  let history = useHistory();\n  return fakeAuth.isAuthenticated ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Welcome!\", \" \", React.createElement(\"button\", {\n    onClick: () => {\n      fakeAuth.signout(() => history.push(\"/\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Sign out\")) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"You are not logged in.\");\n} // A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\n\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => fakeAuth.isAuthenticated ? children : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}\n\nfunction PublicPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Public\");\n}\n\nfunction ProtectedPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Protected\");\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  let login = () => {\n    fakeAuth.authenticate(() => {\n      history.replace(from);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"You must log in to view the page at \", from.pathname), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Log in\"));\n}","map":{"version":3,"sources":["/Users/obscurax/Documents/EÃÅtudes/Applications Web/react-gambling-project/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","useLocation","Navbar","Nav","NavLink","AuthExample","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","signout","AuthButton","history","push","PrivateRoute","children","rest","location","pathname","state","from","PublicPage","ProtectedPage","LoginPage","login","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport {Navbar, Nav, NavLink} from \"react-bootstrap\";\n\nexport default function AuthExample() {\n    return (\n        <Router>\n            <div>\n                <AuthButton />\n\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand>Gambling</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Link tag={Link} to=\"/\">Home</Link>\n                        <Link tag={Link} to=\"/public\">Public</Link>\n                        <Link tag={Link} to=\"/gambling\">Gambling</Link>\n                    </Nav>\n                </Navbar>\n\n                <Switch>\n                    <Route path=\"/public\">\n                        <PublicPage />\n                    </Route>\n                    <Route path=\"/login\">\n                        <LoginPage />\n                    </Route>\n                    <PrivateRoute path=\"/gambling\">\n                        <ProtectedPage />\n                    </PrivateRoute>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nconst fakeAuth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        fakeAuth.isAuthenticated = true;\n        setTimeout(cb, 100); // fake async\n    },\n    signout(cb) {\n        fakeAuth.isAuthenticated = false;\n        setTimeout(cb, 100);\n    }\n};\n\nfunction AuthButton() {\n    let history = useHistory();\n\n    return fakeAuth.isAuthenticated ? (\n        <p>\n            Welcome!{\" \"}\n            <button\n                onClick={() => {\n                    fakeAuth.signout(() => history.push(\"/\"));\n                }}\n            >\n                Sign out\n            </button>\n        </p>\n    ) : (\n        <p>You are not logged in.</p>\n    );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                fakeAuth.isAuthenticated ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction PublicPage() {\n    return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {\n    return <h3>Protected</h3>;\n}\n\nfunction LoginPage() {\n    let history = useHistory();\n    let location = useLocation();\n\n    let { from } = location.state || { from: { pathname: \"/\" } };\n    let login = () => {\n        fakeAuth.authenticate(() => {\n            history.replace(from);\n        });\n    };\n\n    return (\n        <div>\n            <p>You must log in to view the page at {from.pathname}</p>\n            <button onClick={login}>Log in</button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}